<?xml version="1.0" encoding="UTF-8"?>
<coverage>
<block classname='com.googlecode.jmxtrans.util.NumberUtils' method='isNumeric' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getKeyString' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addRootPrefix' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='internalWrite' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.util.NumberUtils' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='firstNonNull' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getTypeNameValuesSeparator' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter$ResultValuesTransformer' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='internalWrite' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addMBeanIdentifier' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.PropertyResolver' method='resolveProps' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='internalWrite' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='<init>' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server$Builder' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.StringUtils' method='cleanupStr' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addRootPrefix' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter$ResultValuesTransformer' method='apply' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='internalWrite' number='19'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$Builder' method='setAllowDottedKeys' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getBooleanSetting' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='firstNonNull' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getTypeNameValuesSeparator' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests' method='getGraphiteWriter' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='internalWrite' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='internalWrite' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='computeKey' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter$ResultValuesTransformer' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.PropertyResolver' method='resolveProps' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='internalWrite' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.StringUtils' method='cleanupStr' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter$Builder' method='setPort' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.PropertyResolver$PropertyResolverFunc' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter$Builder' method='setHost' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter$Builder' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getTypeNameValuesSeparator' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='internalWrite' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getConcatedTypeNameValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server$Builder' method='setAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='computeKey' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getConcatedTypeNameValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='builder' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server$Builder' method='setPort' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server$Builder' method='build' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.StringUtils' method='cleanupStr' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='<init>' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getConcatedTypeNameValues' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.PropertyResolver$ObjectPropertyResolverFunc' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter$ResultValuesTransformer' method='apply' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getConcatedTypeNameValues' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests' method='getGraphiteWriter' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.StringUtils' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='internalWrite' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='computeKey' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result' method='toString' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='setPool' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addAlias' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter$Builder' method='addTypeNames' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='firstNonNull' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='doWrite' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query' method='builder' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.StringUtils' method='cleanupStr' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addMBeanIdentifier' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addRootPrefix' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter$Builder' method='build' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query' method='isAllowDottedKeys' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server' method='builder' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$Builder' method='build' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getConcatedTypeNameValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='internalWrite' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='<init>' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='firstNonNull' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.StringUtils' method='cleanupStr' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.util.NumberUtils' method='isNumeric' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getSettings' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$Builder' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getConcatedTypeNameValues' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server$Builder' method='setHost' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter$Builder' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.PropertyResolver' method='resolveList' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='internalWrite' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getTypeNames' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.PropertyResolver$PropertyResolverFunc' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server' method='getAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addMBeanIdentifier' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.StringUtils' method='cleanupStr' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query' method='isUseObjDomainAsKey' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.results.IdentityValueTransformer' method='apply' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.PropertyResolver' method='resolveProps' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server$Builder' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='firstNonNull' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.util.NumberUtils' method='isNumeric' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getBooleanSetting' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='internalWrite' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$Builder' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests' method='allowDottedWorks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.PropertyResolver' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query' method='getTypeNames' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='<init>' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.PropertyResolver$ObjectPropertyResolverFunc' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addKeyString' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.StringUtils' method='cleanupStr' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addMBeanIdentifier' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.PropertyResolver' method='resolveProps' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.results.IdentityValueTransformer' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getBooleanSetting' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='firstNonNull' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.PropertyResolver' method='resolveMap' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='internalWrite' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='<init>' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.ConfigurationParser' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getBooleanSetting' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.ConfigurationParser' method='parseServers' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.JmxProcess' method='setServers' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getIntegerSetting' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.PropertyResolver$ObjectPropertyResolverFunc' method='apply' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server' method='getPort' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformer' method='apply' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getBooleanSetting' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.util.JsonUtils' method='getJmxProcess' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.JmxProcess' method='setName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.PropertyResolver$ObjectPropertyResolverFunc' method='apply' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server' method='getPort' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.PropertyResolver$ObjectPropertyResolverFunc' method='apply' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server' method='getPort' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.ConfigurationParser' method='parseServers' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='<init>' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests' method='booleanAsNumberWorks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformer' method='apply' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server' method='getHost' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.JmxProcess' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.ConfigurationParser' method='parseServers' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.ConfigurationParser' method='mergeServerLists' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query' method='getOutputWriters' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformer' method='apply' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server' method='getHost' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.ConfigurationParser' method='mergeServerLists' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getIntegerSetting' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.ConfigurationParser' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformer' method='apply' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server' method='getHost' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.ConfigurationParser' method='parseServers' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.ConfigurationParser' method='parseServers' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformer' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addMBeanIdentifier' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.ConfigurationParser' method='mergeServerLists' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getIntegerSetting' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.JmxProcess' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.ConfigurationParser' method='parseServers' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.ConfigurationParser' method='parseServers' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Server' method='getQueries' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.JmxProcess' method='getServers' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getTypeNameValueMap' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='splitTypeNameValue' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getConcatedTypeNameValues' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='computeKey' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getTypeNameValueMap' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getConcatedTypeNameValues' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='splitTypeNameValue' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getTypeNameValueMap' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='splitTypeNameValue' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getTypeNameValuesSeparator' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getConcatedTypeNameValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getConcatedTypeNameValues' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getTypeNameValueMap' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$Builder' method='setUseObjDomainAsKey' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getTypeNameValueMap' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests' method='checkEmptyTypeNamesAreIgnored' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getConcatedTypeNameValues' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$Builder' method='setObj' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getTypeNameValueMap' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addTypeName' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getConcatedTypeNameValues' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getTypeNameValueMap' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='<init>' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests' method='hostIsRequired' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests' method='hostIsRequired' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests' method='portIsRequired' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='<init>' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests' method='portIsRequired' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getIntegerSetting' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriter' method='internalWrite' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests' method='socketInvalidatedWhenError' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests$UnflushableByteArrayOutputStream' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='addMBeanIdentifier' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests$UnflushableByteArrayOutputStream' method='flush' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests$UnflushableByteArrayOutputStream' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests' method='useObjDomainWorks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.GraphiteWriterTests' method='writeSingleResult' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.LibratoWriterTest' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getIntSetting' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.LibratoWriterTest' method='httpUserAgentContainsAppropriateInformation' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.LibratoWriter' method='<init>' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.LibratoWriter' method='<init>' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.LibratoWriter' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.LibratoWriter' method='<init>' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getIntSetting' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.LibratoWriter' method='<init>' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.LibratoWriter' method='<init>' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.LibratoWriter' method='<init>' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='sendOutput' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='66'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='setupTest' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='stop' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='16'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='isDebugEnabled' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='sanitizeString' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='67'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter$ResultValuesTransformer' method='apply' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='setupTest' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='86'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='sanitizeString' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='64'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='25'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='sanitizeString' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='85'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='93'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='16'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='34'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='setupTest' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter$ResultValuesTransformer' method='apply' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='sendOutput' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='34'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$1d018e7a' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='stop' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='31'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='70'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='19'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='setupTest' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getSettings' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter$ResultValuesTransformer' method='apply' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='sanitizeString' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getTypeNames' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='53'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='91'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='83'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='prepareSender' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='81'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='stop' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='sendOutput' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='sendOutput' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='72'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getTypeNames' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='31'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='22'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='82'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='prepareSender' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='37'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='19'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='stop' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='sendOutput' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='setupTest' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter$ResultValuesTransformer' method='apply' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='shutdownSender' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='50'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='doWrite' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='89'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='51'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='25'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='79'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='22'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='sendOutput' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getTypeNames' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='34'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='69'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='16'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='sanitizeString' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='88'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='doWrite' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='prepareSender' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='40'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='75'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter$ResultValuesTransformer' method='apply' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='sanitizeString' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='78'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getStringSetting' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getTypeNames' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='76'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='31'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='finishOutput' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='sanitizeString' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='73'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter$ResultValuesTransformer' method='apply' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='37'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='25'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter$ResultValuesTransformer' method='<init>' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='76'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='finishOutput' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='43'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getTypeNames' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='sanitizeString' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='37'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter$ResultValuesTransformer' method='<init>' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='75'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='finishOutput' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getStringSetting' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='start' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='finishOutput' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='22'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='sendOutput' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='73'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='46'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='isDebugEnabled' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='sanitizeString' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='72'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='34'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='start' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='47'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='finishOutput' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getStringSetting' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='isDebugEnabled' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='<init>' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='sanitizeString' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='69'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='51'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.ClassAttributeNamingStrategy' method='formatName' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='34'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='51'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='<init>' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='setupTest' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='31'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.util.NumberUtils' method='isNumeric' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='16'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='startOutput' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='70'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.ClassAttributeNamingStrategy' method='formatName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='68'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='50'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getConcatedTypeNameValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='start' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='isDebugEnabled' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='49'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='67'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='firstNonNull' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='<init>' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='setupTest' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='start' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getConcatedTypeNameValues' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='startOutput' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='<init>' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.ClassAttributeNamingStrategy' method='formatName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='48'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='setupTest' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='firstNonNull' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='finishOutput' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='78'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getConcatedTypeNameValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='65'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='55'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='48'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='66'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='isDebugEnabled' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.util.NumberUtils' method='isNumeric' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='19'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='31'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='34'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='<init>' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='54'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='45'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$1d018e7a' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getConcatedTypeNameValues' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='63'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='setupTest' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='53'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='<init>' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='isDebugEnabled' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='46'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='19'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='16'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='48'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='shutdownSender' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='61'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='setupTest' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='setupTest' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='43'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$1d018e7a' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='51'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='22'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getSettings' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='47'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='setupTest' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='shutdownSender' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='sendOutput' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='prepareSender' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter$ResultValuesTransformer' method='apply' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='58'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='doWrite' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='45'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.util.NumberUtils' method='isNumeric' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='shutdownSender' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='sendOutput' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='59'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='50'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='startOutput' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='76'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='57'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.util.NumberUtils' method='isNumeric' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='19'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='prepareSender' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='60'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getSettings' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='77'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='47'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='doWrite' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='16'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='firstNonNull' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='sanitizeString' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='sendOutput' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='shutdownSender' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='doWrite' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='57'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.ClassAttributeNamingStrategy' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getSettings' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='63'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='sendOutput' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='<init>' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='startOutput' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='firstNonNull' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='71'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='48'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.KeyUtils' method='getConcatedTypeNameValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='setupTest' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='37'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter$ResultValuesTransformer' method='apply' number='16'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='firstNonNull' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='prepareSender' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='doWrite' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='49'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='55'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='sanitizeString' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='<init>' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='25'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='getSettings' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='61'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='setupTest' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='startOutput' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='startOutput' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='25'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='40'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='sendOutput' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testAddHostnameTag' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8a152dc1' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='56'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='internalWrite' number='50'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='45'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.BaseOutputWriter' method='doWrite' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='shutdownSender' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTag' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='25'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='60'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$TestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='formatResultString' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d92c8bdd' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d92c8bdd' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='validateSetup' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d92c8bdd' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='validateSetup' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='validateSetup' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugEanbled' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='validateSetup' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$46402b24' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugEanbled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ae51c2ec' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugOuptutResultString' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugOuptutResultString' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugOuptutResultString' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ae51c2ec' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d92c8bdd' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugOuptutResultString' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$1d018e7a' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$1d018e7a' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='createWriter' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$1d018e7a' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d92c8bdd' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d92c8bdd' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugOuptutResultString' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugOuptutResultString' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugOuptutResultString' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1b656233' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDebugOuptutResultString' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ae51c2ec' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDebugOuptutResultString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='startOutput' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='finishOutput' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='sendOutput' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='sendOutput' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='startOutput' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='sendOutput' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='finishOutput' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='startOutput' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='22'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='sendOutput' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='startOutput' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='sendOutput' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ae51c2ec' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ae51c2ec' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='finishOutput' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='finishOutput' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ae51c2ec' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$af47da7d' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='sendOutput' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='<init>' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='<init>' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='<init>' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='shutdownSender' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$af47da7d' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='sendOutput' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='shutdownSender' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='<init>' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='sendOutput' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='sendOutput' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='shutdownSender' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='<init>' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='sendOutput' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='shutdownSender' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='sendOutput' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='prepareSender' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='sendOutput' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='<init>' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='prepareSender' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='prepareSender' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$af47da7d' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$1c5b79c4' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDefaultHookMethods' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests$MinimalTestOpenTSDBGenericWriter' method='getAddHostnameTagDefault' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='prepareSender' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDefaultHookMethods(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$729d5cc9' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='92'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$729d5cc9' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testDontAddHostnameTag' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$dfb0fc10' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$729d5cc9' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$da943bf' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$729d5cc9' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$da943bf' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$da943bf' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$729d5cc9' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7abce306' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyResultValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$729d5cc9' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyResultValues(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='31'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='22'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f9da2f4b' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f9da2f4b' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='45'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='47'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testEmptyTagSetting' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='resultParser' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f9da2f4b' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$66edce92' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testEmptyTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='47'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$a6c3e2b9' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$a6c3e2b9' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='45'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f9da2f4b' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$da943bf' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$da943bf' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$da943bf' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$a6c3e2b9' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f9da2f4b' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f9da2f4b' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$13d78200' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testHooksCalled' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testHooksCalled(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.JexlNamingStrategy' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$3a054885' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='43'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.exceptions.LifecycleException' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$a6c3e2b9' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$a6c3e2b9' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testInvalidJexlNaming' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.JexlNamingStrategy' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$a6c3e2b9' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$3a054885' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testInvalidJexlNaming' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$3a054885' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getStringSetting' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='49'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testInvalidJexlNaming' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='48'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testInvalidJexlNaming' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d0721cf1' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.JexlNamingStrategy' method='populateContext' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.JexlNamingStrategy' method='populateContext' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d0721cf1' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.JexlNamingStrategy' method='formatName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.JexlNamingStrategy' method='populateContext' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d0721cf1' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.naming.JexlNamingStrategy' method='formatName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3d85bc38' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testJexlNaming' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$eeb28b89' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testLocalhostUnknownHostException' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testLocalhostUnknownHostException' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$eeb28b89' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a718e7cc' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testLocalhostUnknownHostException' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d0721cf1' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$eeb28b89' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testLocalhostUnknownHostException' number='16'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$3a054885' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d0721cf1' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$3a054885' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testLocalhostUnknownHostException' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testLocalhostUnknownHostException' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$af47da7d' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testLocalhostUnknownHostException' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$3a054885' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d0721cf1' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testLocalhostUnknownHostException' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testLocalhostUnknownHostException' number='19'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$af47da7d' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testLocalhostUnknownHostException' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testLocalhostUnknownHostException' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testLocalhostUnknownHostException' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$af47da7d' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testLocalhostUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$eeb28b89' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$93120b64' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$eeb28b89' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$eeb28b89' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$93120b64' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$5bc62ad0' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$93120b64' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues1' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$25aaab' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c9c293fa' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c9c293fa' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c9c293fa' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$36d63341' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues2' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues2(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='50'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='49'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='34'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='47'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='55'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='52'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='37'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='53'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='58'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='59'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d59731e' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='56'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='62'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d59731e' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='61'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d59731e' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='34'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='31'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='16'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='65'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='37'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='64'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='67'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c9c293fa' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='40'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='25'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='46'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c9c293fa' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='31'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTypeNamesTags' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c9c293fa' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMergedTypeNameValues3' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='validateMergedTypeNameValues' number='43'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7a6d1265' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='58'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='89'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='87'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='59'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='86'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='93'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='92'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='90'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='81'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='80'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$291be838' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='78'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$291be838' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='84'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='83'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='74'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='76'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$291be838' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='77'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='70'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='71'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='73'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='96'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='65'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='67'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='95'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='68'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='61'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='101'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='62'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='98'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$962f877f' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='99'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='64'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testMultipleValuesWithMatchingAttribute' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$291be838' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ab2732b6' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$291be838' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ab2732b6' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ab2732b6' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.util.NumberUtils' method='isNumeric' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d59731e' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d59731e' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$291be838' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d59731e' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='processOneMetric' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNonNumericValue' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$183ad1fd' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='<init>' number='84'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ab2732b6' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ab2732b6' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ab2732b6' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='19'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ba2fa13f' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ba2fa13f' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ba2fa13f' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testNullHostTagname' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f4f80b36' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f4f80b36' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='50'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='47'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='48'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='45'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='51'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f4f80b36' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='54'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='53'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='57'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='56'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='59'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$620baa7d' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testOneValueMatchingAttribute' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$4a1ea7ea' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f4f80b36' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testPortNumberAsString' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$4a1ea7ea' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testPortNumberAsString' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f4f80b36' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getIntegerSetting' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testPortNumberAsString' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Settings' method='getIntegerSetting' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testPortNumberAsString' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f4f80b36' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$4a1ea7ea' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testPortNumberAsString' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testPortNumberAsString' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='92'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='57'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='56'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$10bf366d' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='59'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='90'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='89'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='96'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='60'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='95'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='63'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='62'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='93'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='48'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='84'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='47'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='83'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='81'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='50'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='51'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='80'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='53'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='87'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='86'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='54'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='72'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='74'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='75'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='77'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='78'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='99'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='45'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='65'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='66'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='98'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='50'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='68'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='47'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='104'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='69'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$10bf366d' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='48'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='101'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$10bf366d' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriter' method='addTags' number='45'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='102'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7dd2d5b4' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='71'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testTagSetting' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testValidateValidHostPort' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$10bf366d' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testValidateValidHostPort' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$10bf366d' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c8a40a15' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$4a1ea7ea' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testValidateValidHostPort' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$4a1ea7ea' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testValidateValidHostPort' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testValidateValidHostPort' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$4a1ea7ea' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testValidateValidHostPort' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b7324731' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testValidateValidHostPort' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testValidateValidHostPort' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c8a40a15' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$10bf366d' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testValidateValidHostPort' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests' method='testValidateValidHostPort' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c8a40a15' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testValidateValidHostPort(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setPort' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='58'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='exceptionThrownIfHostIsNotDefined' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setDebugEnabled' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c8a40a15' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='59'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='getAddHostnameTagDefault' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setDebugEnabled' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c8a40a15' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setPort' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c8a40a15' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='56'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='exceptionThrownIfHostIsNotDefined' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='getAddHostnameTagDefault' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setDebugEnabled' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='builder' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setDebugEnabled' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setPort' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='54'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='getAddHostnameTagDefault' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setDebugEnabled' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='builder' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setPort' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setPort' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$93120b64' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setPort' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setPort' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='52'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='53'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$27434086' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='50'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ba2fa13f' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setDebugEnabled' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$93120b64' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='<init>' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setDebugEnabled' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setHost' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$93120b64' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='<init>' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='48'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='<init>' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setDebugEnabled' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setHost' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='builder' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='<init>' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='65'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$877dfb7a' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='<init>' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ba2fa13f' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$35b7a95c' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setHost' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='40'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='builder' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setDebugEnabled' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='getAddHostnameTagDefault' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setPort' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='63'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='exceptionThrownIfHostIsNotDefined' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$877dfb7a' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='47'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='62'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setPort' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setDebugEnabled' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='builder' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$ba2fa13f' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='exceptionThrownIfHostIsNotDefined' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$877dfb7a' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setPort' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='builder' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='45'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='60'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f4919ac1' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='setHost' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='setupTest' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter$Builder' method='build' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfHostIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f3296cca' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='exceptionThrownIfPortIsNotDefined' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f3296cca' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f3296cca' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='exceptionThrownIfPortIsNotDefined' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='exceptionThrownIfPortIsNotDefined' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='exceptionThrownIfPortIsNotDefined' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.exceptionThrownIfPortIsNotDefined(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$3a6da416' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='78'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='45'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='80'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='47'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='19'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='48'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='31'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='25'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='74'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='75'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='50'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$603d0c11' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='77'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='51'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f3296cca' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='53'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='71'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='54'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='25'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='72'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='22'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='56'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='66'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='101'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$3a6da416' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='69'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='58'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f3296cca' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='68'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$f3296cca' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='63'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='63'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='62'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='65'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$3a6da416' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testFinishOutputIOException' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='19'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='22'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$46767e3a' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$46767e3a' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='60'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='59'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$46767e3a' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='25'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='sendOutput' number='62'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$a781435d' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$3a6da416' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$3a6da416' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSendOutputIOException' number='31'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$3a6da416' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSendOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.exceptions.LifecycleException' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d1b41825' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d1b41825' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d1b41825' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='22'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='19'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='25'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='22'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCloseIOException' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='100'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='99'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$54195a2c' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='25'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d1b41825' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d1b41825' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$54195a2c' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='94'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$46767e3a' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b38a1d81' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$46767e3a' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='92'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='31'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$d1b41825' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$54195a2c' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='91'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='34'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='16'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSocketCreationIOException' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$3ec7b76c' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$46767e3a' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='37'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='34'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$888e55f6' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='22'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$888e55f6' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='startOutput' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testStartOutputIOException' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$888e55f6' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='49'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$e5c3417' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='85'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='22'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='19'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$54195a2c' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$54195a2c' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$e5c3417' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='40'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='43'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$54195a2c' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$f5a1f53d' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='47'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c12cf973' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='46'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='34'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='31'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$888e55f6' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$888e55f6' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$888e55f6' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='37'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='25'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$e5c3417' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='shutdownSender' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendNoOpenTSDBResponse' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='16'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='47'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='51'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c95a076' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='50'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='48'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='53'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='84'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='82'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='45'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='54'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='81'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='79'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='54'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='78'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='22'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='57'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='56'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='51'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='76'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c95a076' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='50'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='75'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='53'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='73'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='65'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='66'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='67'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='67'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='69'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$7b6fd35e' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='70'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='72'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c95a076' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$e5c3417' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='56'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='60'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='57'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='58'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='59'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='finishOutput' number='60'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='65'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='64'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$e5c3417' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$e5c3417' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse1' number='62'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='45'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='48'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$1fefcf3f' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='47'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$1fefcf3f' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='54'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='53'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='22'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='56'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$1fefcf3f' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='50'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='16'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='51'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='59'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='58'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testSuccessfulSendOpenTSDBResponse2' number='61'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse2(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='25'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$1fefcf3f' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='82'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$1fefcf3f' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='84'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='34'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$8d036e86' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$4b96a4e5' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='31'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$79a93fbd' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='81'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$4b96a4e5' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c95a076' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$4b96a4e5' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='16'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='90'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriter' method='prepareSender' number='89'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c95a076' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$1fefcf3f' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$c95a076' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests' method='testUnknownHostException' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='logValue' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='internalWrite' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='logValue' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='internalWrite' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='internalWrite' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformer' method='apply' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest' method='initMetrics' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='logValue' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='internalWrite' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest' method='initOutputWriter' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='internalWrite' number='4'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest' method='mdcIsCleanedAfterCall' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='internalWrite' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='computeAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='logValue' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='internalWrite' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='logValue' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='internalWrite' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriter' method='computeAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.mdcIsCleanedAfterCall(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest' method='metricsAreSentToLoggerViaMDC' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest$1' method='answer' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest$1' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest.metricsAreSentToLoggerViaMDC(com.googlecode.jmxtrans.model.output.Slf4JOutputWriterTest)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='<init>' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setDebugEnabled' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='39'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setPort' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$4b96a4e5' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='<init>' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='30'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='exceptionIsThrownWhenHostIsNotDefined' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setPort' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setDebugEnabled' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setDebugEnabled' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='builder' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='exceptionIsThrownWhenHostIsNotDefined' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setPort' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setDebugEnabled' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='builder' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='<init>' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='exceptionIsThrownWhenHostIsNotDefined' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='40'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='builder' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setDebugEnabled' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setHost' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='<init>' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setDebugEnabled' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='getAddHostnameTagDefault' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setPort' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setHost' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='42'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='getAddHostnameTagDefault' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setPort' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setHost' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setDebugEnabled' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setPort' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setDebugEnabled' number='7'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='<init>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='getAddHostnameTagDefault' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='builder' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setHost' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='36'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setPort' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setDebugEnabled' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$b8aa442c' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='<init>' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setPort' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='builder' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='builder' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='33'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setPort' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$922759f5' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='getAddHostnameTagDefault' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='31'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$4b96a4e5' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setPort' number='13'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$922759f5' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='exceptionIsThrownWhenHostIsNotDefined' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$922759f5' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='setupTest' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$4b96a4e5' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='build' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter$Builder' method='setDebugEnabled' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenHostIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$32410dbd' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='exceptionIsThrownWhenPortIsNotDefined' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='exceptionIsThrownWhenPortIsNotDefined' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='exceptionIsThrownWhenPortIsNotDefined' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='exceptionIsThrownWhenPortIsNotDefined' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$32410dbd' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$32410dbd' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='41'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='40'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='63'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='62'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='43'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='19'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='68'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='44'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='66'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='97'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='65'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='46'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='72'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='71'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='20'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getEpoch' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='51'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='69'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getEpoch' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='17'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='75'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='52'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$9f54ad04' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='74'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='23'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getEpoch' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$32410dbd' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='80'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getEpoch' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$57ff5376' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$32410dbd' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getEpoch' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='77'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$32410dbd' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='26'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='78'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='27'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='28'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$57ff5376' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='29'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='85'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$57ff5376' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='31'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='32'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$922759f5' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='34'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='86'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$922759f5' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='35'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$922759f5' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getKeyAlias' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getObjDomain' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='8'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getKeyAlias' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getObjDomain' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='37'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='9'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='38'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='sendOutput' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getKeyAlias' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getObjDomain' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$ff3af93c' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='successfullySendMessageToTCollector' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='equals' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$57ff5376' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='equals' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='18'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='getClassName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='1'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='getClassName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='19'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$57ff5376' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='equals' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$57ff5376' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='getClassName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='equals' number='6'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='95'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='14'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='getAttributeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='getAttributeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='15'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='getValues' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='16'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='96'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='88'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$283d75ce' method='CGLIB$STATICHOOK1' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='10'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='getTypeName' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='getTypeName' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='getValues' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='12'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$283d75ce' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='87'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='getValues' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='11'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='getAttributeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='21'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='CGLIB$STATICHOOK2' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='finalize' number='3'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='5'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='22'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='finalize' number='2'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriter' method='prepareSender' number='90'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Query$$EnhancerByMockitoWithCGLIB$$283d75ce' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='setCallbacks' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='equals' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='25'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests' method='testSocketException' number='24'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='<clinit>' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$c512f2bd' method='finalize' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
<block classname='com.googlecode.jmxtrans.model.Result$$EnhancerByMockitoWithCGLIB$$95511515' method='getTypeName' number='0'><tests>
<test name='com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)'/>
</tests>
</block>
</coverage>
