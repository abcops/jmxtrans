142
<classHistory><id hierarchicalHash="13f408df7"><classId hash="1472320774"><name><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="4b87c0e4"><classId hash="1267187940"><name><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></name></classId></id><coverageId>e96790cd</coverageId></classHistory>
<classHistory><id hierarchicalHash="867280ef"><classId hash="2255651055"><name><name>com/googlecode/jmxtrans/example/Ehcache</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="afafae18"><classId hash="2947526168"><name><name>com/googlecode/jmxtrans/jmx/ProcessQueryThread</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="13f66a8b"><classId hash="334916235"><name><name>com/googlecode/jmxtrans/model/output/BaseOutputWriterTests</name></name></classId></id><coverageId>13f66a8b</coverageId></classHistory>
<classHistory><id hierarchicalHash="485ec587"><classId hash="1214170503"><name><name>com/googlecode/jmxtrans/util/JsonPrinterTest</name></name></classId></id><coverageId>485ec587</coverageId></classHistory>
<classHistory><id hierarchicalHash="4fb9621e"><classId hash="1337549342"><name><name>com/googlecode/jmxtrans/example/Tester</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a1e9ea87"><classId hash="28315906"><name><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="3dbd2a7f"><classId hash="1035807359"><name><name>com/googlecode/jmxtrans/jmx/ProcessServerThread</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8ea4f076"><classId hash="2393174134"><name><name>com/googlecode/jmxtrans/model/ServerTests</name></name></classId></id><coverageId>8ea4f076</coverageId></classHistory>
<classHistory><id hierarchicalHash="338373eb"><classId hash="864252907"><name><name>com/googlecode/jmxtrans/model/output/LibratoWriterTest</name></name></classId></id><coverageId>338373eb</coverageId></classHistory>
<classHistory><id hierarchicalHash="880d6115"><classId hash="902773306"><name><name>com/googlecode/jmxtrans/model/Server$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="70254551"><classId hash="1881490769"><name><name>com/googlecode/jmxtrans/classloader/ClassLoadingTests</name></name></classId></id><coverageId>70254551</coverageId></classHistory>
<classHistory><id hierarchicalHash="14c549600"><classId hash="4773181"><name><name>com/googlecode/jmxtrans/guice/JmxTransModule$3</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="144f24602"><classId hash="2763549821"><name><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></name></classId></id><coverageId>1e8e079c2</coverageId></classHistory>
<classHistory><id hierarchicalHash="9203c458"><classId hash="2449720408"><name><name>com/googlecode/jmxtrans/connections/DatagramSocketFactoryTest</name></name></classId></id><coverageId>9203c458</coverageId></classHistory>
<classHistory><id hierarchicalHash="805249d0"><classId hash="2152876496"><name><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></name></classId></id><coverageId>70254551</coverageId></classHistory>
<classHistory><id hierarchicalHash="c395e478"><classId hash="3281380472"><name><name>com/googlecode/jmxtrans/example/MemoryPool</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="191e63c03"><classId hash="2789563787"><name><name>com/googlecode/jmxtrans/model/PropertyResolver$ObjectPropertyResolverFunc</name></name></classId></id><coverageId>4933859af</coverageId></classHistory>
<classHistory><id hierarchicalHash="523e26db"><classId hash="1379804891"><name><name>com/googlecode/jmxtrans/model/Server</name></name></classId></id><coverageId>47b3fe18e</coverageId></classHistory>
<classHistory><id hierarchicalHash="e5339bc3"><classId hash="2683193806"><name><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="cd15a1e0"><classId hash="3440746976"><name><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></name></classId></id><coverageId>5b447b26</coverageId></classHistory>
<classHistory><id hierarchicalHash="b7bea798"><classId hash="3082725272"><name><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="cc2fce8"><classId hash="214105320"><name><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></name></classId></id><coverageId>178e06a5b</coverageId></classHistory>
<classHistory><id hierarchicalHash="1f1349463"><classId hash="2770916256"><name><name>com/googlecode/jmxtrans/guice/JmxTransModule$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="159f9a85d"><classId hash="233695130"><name><name>com/googlecode/jmxtrans/guice/JmxTransModule$2</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f4092590"><classId hash="141051672"><name><name>com/googlecode/jmxtrans/model/PropertyResolver$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="7fb14406"><classId hash="2142323718"><name><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></name></classId></id><coverageId>3b7dee4f</coverageId></classHistory>
<classHistory><id hierarchicalHash="4e3b6696"><classId hash="1312515734"><name><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPoolMBean</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="8c3b82c3"><classId hash="1256219192"><name><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="c12b1760"><classId hash="1676894610"><name><name>com/googlecode/jmxtrans/model/Query$Builder</name></name></classId></id><coverageId>5ae276476</coverageId></classHistory>
<classHistory><id hierarchicalHash="111e7881a"><classId hash="848186777"><name><name>com/googlecode/jmxtrans/model/output/NagiosWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="d6f0eef4"><classId hash="3606114036"><name><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="cf8e2f32"><classId hash="3482201906"><name><name>com/googlecode/jmxtrans/model/OutputWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="5d37b5ce"><classId hash="1563932110"><name><name>com/googlecode/jmxtrans/model/Query</name></name></classId></id><coverageId>641f6fd24</coverageId></classHistory>
<classHistory><id hierarchicalHash="128fb3d81"><classId hash="1532815119"><name><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></name></classId></id><coverageId>f282b13f</coverageId></classHistory>
<classHistory><id hierarchicalHash="62884e47"><classId hash="1653100103"><name><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></name></classId></id><coverageId>19540559b</coverageId></classHistory>
<classHistory><id hierarchicalHash="10e5ef1f6"><classId hash="652228869"><name><name>com/googlecode/jmxtrans/model/output/DailyKeyOutWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="3434975"><classId hash="54741365"><name><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></name></classId></id><coverageId>13906a10f</coverageId></classHistory>
<classHistory><id hierarchicalHash="117cb4cba"><classId hash="785072409"><name><name>com/googlecode/jmxtrans/example/TreeWalker3$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="3569669d"><classId hash="867784091"><name><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="cac240ac"><classId hash="3401728172"><name><name>com/googlecode/jmxtrans/model/NamingStrategy</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="99f2229e"><classId hash="2582782622"><name><name>com/googlecode/jmxtrans/example/TreeWalker</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b6177cc3"><classId hash="366846782"><name><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b77e881d"><classId hash="3078522909"><name><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriterTests</name></name></classId></id><coverageId>b77e881d</coverageId></classHistory>
<classHistory><id hierarchicalHash="1683b486e"><classId hash="3280133105"><name><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></name></classId></id><coverageId>f5e40356</coverageId></classHistory>
<classHistory><id hierarchicalHash="e96790cd"><classId hash="3915878605"><name><name>com/googlecode/jmxtrans/jmx/JmxProcessingTests</name></name></classId></id><coverageId>e96790cd</coverageId></classHistory>
<classHistory><id hierarchicalHash="1e160785"><classId hash="504760197"><name><name>com/googlecode/jmxtrans/connections/JmxConnectionParamsTests</name></name></classId></id><coverageId>1e160785</coverageId></classHistory>
<classHistory><id hierarchicalHash="11b6e9eba"><classId hash="1305495624"><name><name>com/googlecode/jmxtrans/model/output/GangliaWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a445eee2"><classId hash="1192114452"><name><name>com/googlecode/jmxtrans/model/Query$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="de1c31cb"><classId hash="1038243910"><name><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="eb9345c7"><classId hash="3952297415"><name><name>com/googlecode/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></name></classId></id><coverageId>1e8e079c2</coverageId></classHistory>
<classHistory><id hierarchicalHash="2d9a89bb"><classId hash="765102523"><name><name>com/googlecode/jmxtrans/JmxTransformer</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="187b89276"><classId hash="3883841777"><name><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1e25536fa"><classId hash="4139014274"><name><name>com/googlecode/jmxtrans/model/PropertyResolver$PropertyResolverFunc</name></name></classId></id><coverageId>5c6db6e56</coverageId></classHistory>
<classHistory><id hierarchicalHash="19d472460"><classId hash="3653519471"><name><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="66f2b6d6"><classId hash="1727182550"><name><name>com/googlecode/jmxtrans/model/JmxProcess</name></name></classId></id><coverageId>286f5e8ef</coverageId></classHistory>
<classHistory><id hierarchicalHash="111593b37"><classId hash="1897882034"><name><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></name></classId></id><coverageId>732256ea</coverageId></classHistory>
<classHistory><id hierarchicalHash="c6a3fb7c"><classId hash="569085695"><name><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></name></classId></id><coverageId>b77e881d</coverageId></classHistory>
<classHistory><id hierarchicalHash="ce07a361"><classId hash="768461276"><name><name>com/googlecode/jmxtrans/model/output/VelocityWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e38b860d"><classId hash="359683470"><name><name>com/googlecode/jmxtrans/connections/SocketFactory</name></name></classId></id><coverageId>f8fa7e37</coverageId></classHistory>
<classHistory><id hierarchicalHash="15934406"><classId hash="361972742"><name><name>com/googlecode/jmxtrans/guice/GuiceJobFactory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="31b3fef1"><classId hash="833879793"><name><name>com/googlecode/jmxtrans/example/Graphite</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="16dd82ff7"><classId hash="3449706098"><name><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></name></classId></id><coverageId>f282b13f</coverageId></classHistory>
<classHistory><id hierarchicalHash="1019b58c3"><classId hash="4293609409"><name><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e09234e6"><classId hash="3767678182"><name><name>com/googlecode/jmxtrans/util/JsonUtils</name></name></classId></id><coverageId>23e972368</coverageId></classHistory>
<classHistory><id hierarchicalHash="a039d985"><classId hash="2688145797"><name><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></name></classId></id><coverageId>5d49683c9</coverageId></classHistory>
<classHistory><id hierarchicalHash="de1ccc6b"><classId hash="1038283494"><name><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="86d64693"><classId hash="2262189715"><name><name>com/googlecode/jmxtrans/model/output/Settings</name></name></classId></id><coverageId>64017d007</coverageId></classHistory>
<classHistory><id hierarchicalHash="5219a92c"><classId hash="1377413420"><name><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="5f6e5c72"><classId hash="1601068146"><name><name>com/googlecode/jmxtrans/model/results/ValueTransformer</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="19a440cce"><classId hash="3602985181"><name><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></name></classId></id><coverageId>f5e40356</coverageId></classHistory>
<classHistory><id hierarchicalHash="1d195b1f"><classId hash="488200991"><name><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="732256ea"><classId hash="1931630314"><name><name>com/googlecode/jmxtrans/model/output/CloudWatchWriterTests</name></name></classId></id><coverageId>732256ea</coverageId></classHistory>
<classHistory><id hierarchicalHash="c62ba1e5"><classId hash="3324748261"><name><name>com/googlecode/jmxtrans/model/ValidationException</name></name></classId></id><coverageId>732256ea</coverageId></classHistory>
<classHistory><id hierarchicalHash="91cd95f9"><classId hash="2446169593"><name><name>com/googlecode/jmxtrans/exceptions/LifecycleException</name></name></classId></id><coverageId>29deea3c2</coverageId></classHistory>
<classHistory><id hierarchicalHash="179422870"><classId hash="3641200363"><name><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="415b208b"><classId hash="1096491147"><name><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e25e76c7"><classId hash="3797841607"><name><name>com/googlecode/jmxtrans/example/Hibernate</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="a1596000"><classId hash="2706989056"><name><name>com/googlecode/jmxtrans/cli/OptionsException</name></name></classId></id><coverageId>5b447b26</coverageId></classHistory>
<classHistory><id hierarchicalHash="956bc8fe"><classId hash="2506868990"><name><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></name></classId></id><coverageId>21a9258f1</coverageId></classHistory>
<classHistory><id hierarchicalHash="163ad673d"><classId hash="3279130040"><name><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></name></classId></id><coverageId>2f2904507</coverageId></classHistory>
<classHistory><id hierarchicalHash="a814e40d"><classId hash="2819941389"><name><name>com/googlecode/jmxtrans/example/HeapMemory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b38289ab"><classId hash="2246574064"><name><name>com/googlecode/jmxtrans/JmxTransformer$ShutdownHook</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="112390636"><classId hash="3504203179"><name><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorException</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="6d4c71d5"><classId hash="671555552"><name><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></name></classId></id><coverageId>f5b960ba</coverageId></classHistory>
<classHistory><id hierarchicalHash="ece1d4e5"><classId hash="3974223077"><name><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformerTests</name></name></classId></id><coverageId>ece1d4e5</coverageId></classHistory>
<classHistory><id hierarchicalHash="8c3e0a38"><classId hash="2352876088"><name><name>com/googlecode/jmxtrans/model/output/NumberUtilsTest</name></name></classId></id><coverageId>8c3e0a38</coverageId></classHistory>
<classHistory><id hierarchicalHash="eb99eaa8"><classId hash="3952732840"><name><name>com/googlecode/jmxtrans/model/PropertyResolverTests</name></name></classId></id><coverageId>eb99eaa8</coverageId></classHistory>
<classHistory><id hierarchicalHash="e2b777af"><classId hash="2423869652"><name><name>com/googlecode/jmxtrans/model/Server$Builder</name></name></classId></id><coverageId>3e77048e0</coverageId></classHistory>
<classHistory><id hierarchicalHash="c7bbcfb3"><classId hash="3350974387"><name><name>com/googlecode/jmxtrans/util/LocalJMXConnector</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="5b447b26"><classId hash="1531214630"><name><name>com/googlecode/jmxtrans/cli/CliArgumentParserTest</name></name></classId></id><coverageId>5b447b26</coverageId></classHistory>
<classHistory><id hierarchicalHash="f282b13f"><classId hash="4068651327"><name><name>com/googlecode/jmxtrans/model/output/GangliaWriterTests</name></name></classId></id><coverageId>f282b13f</coverageId></classHistory>
<classHistory><id hierarchicalHash="b50e2a00"><classId hash="3037604352"><name><name>com/googlecode/jmxtrans/ConfigurationParserTest</name></name></classId></id><coverageId>b50e2a00</coverageId></classHistory>
<classHistory><id hierarchicalHash="f3e1375"><classId hash="255726453"><name><name>com/googlecode/jmxtrans/model/results/IdentityValueTransformerTests</name></name></classId></id><coverageId>f3e1375</coverageId></classHistory>
<classHistory><id hierarchicalHash="14505adb4"><classId hash="3555085314"><name><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1436b3133"><classId hash="3528183681"><name><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder</name></name></classId></id><coverageId>732256ea</coverageId></classHistory>
<classHistory><id hierarchicalHash="c01bb671"><classId hash="3223041649"><name><name>com/googlecode/jmxtrans/EqualsTests</name></name></classId></id><coverageId>c01bb671</coverageId></classHistory>
<classHistory><id hierarchicalHash="eba0de78"><classId hash="3953188472"><name><name>com/googlecode/jmxtrans/model/PropertyResolver</name></name></classId></id><coverageId>9ec90307a</coverageId></classHistory>
<classHistory><id hierarchicalHash="7af9b570"><classId hash="2063185264"><name><name>com/googlecode/jmxtrans/util/WatchDir</name></name></classId></id><coverageId>c0cb97ea</coverageId></classHistory>
<classHistory><id hierarchicalHash="6f309f16"><classId hash="1865457430"><name><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformerTests</name></name></classId></id><coverageId>6f309f16</coverageId></classHistory>
<classHistory><id hierarchicalHash="ddb2b5cf"><classId hash="3719476687"><name><name>com/googlecode/jmxtrans/ConfigurationParser</name></name></classId></id><coverageId>1aac78aba</coverageId></classHistory>
<classHistory><id hierarchicalHash="1201adc8c"><classId hash="2145452807"><name><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></name></classId></id><coverageId>338373eb</coverageId></classHistory>
<classHistory><id hierarchicalHash="230dddec"><classId hash="19025645"><name><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e9000ba1"><classId hash="3909094305"><name><name>com/googlecode/jmxtrans/example/TreeWalker3</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="aecac30f"><classId hash="2932523791"><name><name>com/googlecode/jmxtrans/util/JsonPrinter</name></name></classId></id><coverageId>485ec587</coverageId></classHistory>
<classHistory><id hierarchicalHash="6b814c3e"><classId hash="1803635774"><name><name>com/googlecode/jmxtrans/model/output/SettingsTests</name></name></classId></id><coverageId>6b814c3e</coverageId></classHistory>
<classHistory><id hierarchicalHash="bad60941"><classId hash="446443452"><name><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="553adc43"><classId hash="1429920835"><name><name>com/googlecode/jmxtrans/model/Result</name></name></classId></id><coverageId>487d09aa2</coverageId></classHistory>
<classHistory><id hierarchicalHash="a66c25e1"><classId hash="103959644"><name><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f053bcb1"><classId hash="4032019633"><name><name>com/googlecode/jmxtrans/example/TreeWalker2</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="52cd1bef"><classId hash="1389173743"><name><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></name></classId></id><coverageId>36ad7e4b4</coverageId></classHistory>
<classHistory><id hierarchicalHash="f5e40356"><classId hash="4125360982"><name><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriterTests</name></name></classId></id><coverageId>f5e40356</coverageId></classHistory>
<classHistory><id hierarchicalHash="c0cb97ea"><classId hash="3234568170"><name><name>com/googlecode/jmxtrans/util/WatchDirTest</name></name></classId></id><coverageId>c0cb97ea</coverageId></classHistory>
<classHistory><id hierarchicalHash="ca31a20f"><classId hash="3392250383"><name><name>com/googlecode/jmxtrans/cli/JmxTransConfiguration</name></name></classId></id><coverageId>5b447b26</coverageId></classHistory>
<classHistory><id hierarchicalHash="ca4f4fbd"><classId hash="3394195389"><name><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></name></classId></id><coverageId>1e160785</coverageId></classHistory>
<classHistory><id hierarchicalHash="3b7dee4f"><classId hash="998108751"><name><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriterTests</name></name></classId></id><coverageId>3b7dee4f</coverageId></classHistory>
<classHistory><id hierarchicalHash="df2b42ae"><classId hash="3744154286"><name><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></name></classId></id><coverageId>1df648624</coverageId></classHistory>
<classHistory><id hierarchicalHash="d004f040"><classId hash="3489984576"><name><name>com/googlecode/jmxtrans/example/Ganglia</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="17f931406"><classId hash="3747166849"><name><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="93cf98ae"><classId hash="2479855790"><name><name>com/googlecode/jmxtrans/util/JsonUtilsTest</name></name></classId></id><coverageId>93cf98ae</coverageId></classHistory>
<classHistory><id hierarchicalHash="13a57d3a0"><classId hash="1815913249"><name><name>com/googlecode/jmxtrans/connections/JmxConnectionFactory</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f8fa7e37"><classId hash="4177165879"><name><name>com/googlecode/jmxtrans/connections/SocketFactoryTests</name></name></classId></id><coverageId>f8fa7e37</coverageId></classHistory>
<classHistory><id hierarchicalHash="eec442d0"><classId hash="4005839568"><name><name>com/googlecode/jmxtrans/jobs/ServerJob</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="123c13604"><classId hash="1445576308"><name><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="d6df450e"><classId hash="3604956430"><name><name>com/googlecode/jmxtrans/util/WatchedCallback</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="f5b960ba"><classId hash="4122566842"><name><name>com/googlecode/jmxtrans/model/output/GraphiteWriterTests</name></name></classId></id><coverageId>f5b960ba</coverageId></classHistory>
<classHistory><id hierarchicalHash="d06efa0d"><classId hash="3496933901"><name><name>com/googlecode/jmxtrans/example/ActiveMQ</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="abd8c4ce"><classId hash="2883110094"><name><name>com/googlecode/jmxtrans/jmx/JmxResultProcessorTest</name></name></classId></id><coverageId>abd8c4ce</coverageId></classHistory>
<classHistory><id hierarchicalHash="e57f2b7a"><classId hash="1162170869"><name><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></name></classId></id><coverageId>f5b960ba</coverageId></classHistory>
<classHistory><id hierarchicalHash="434d4055"><classId hash="1129136213"><name><name>com/googlecode/jmxtrans/model/naming/StringUtilsTest</name></name></classId></id><coverageId>434d4055</coverageId></classHistory>
<classHistory><id hierarchicalHash="1b7f21fa0"><classId hash="3497223855"><name><name>com/googlecode/jmxtrans/model/output/KeyOutWriter$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="7c7b6721"><classId hash="2088462113"><name><name>com/googlecode/jmxtrans/monitoring/ManagedObject</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="16005ad82"><classId hash="1996857825"><name><name>com/googlecode/jmxtrans/example/TreeWalker3$ResultCapture</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="2ed38a38"><classId hash="785615416"><name><name>com/googlecode/jmxtrans/classloader/JarLoadingException</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="e95b09e8"><classId hash="3915057640"><name><name>com/googlecode/jmxtrans/model/naming/KeyUtilsTests</name></name></classId></id><coverageId>e95b09e8</coverageId></classHistory>
<classHistory><id hierarchicalHash="1448250a"><classId hash="340272394"><name><name>com/googlecode/jmxtrans/example/InterestingInfo</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="5e30de70"><classId hash="1011175281"><name><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></name></classId></id><coverageId>b77e881d</coverageId></classHistory>
<classHistory><id hierarchicalHash="47e7909f"><classId hash="1206358175"><name><name>com/googlecode/jmxtrans/monitoring/ManagedJmxTransformerProcessMXBean</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="d078c6fe"><classId hash="809430393"><name><name>com/googlecode/jmxtrans/model/output/StdOutWriter</name></name></classId></id><coverageId>148ddc2ae</coverageId></classHistory>
<classHistory><id hierarchicalHash="75d3b4df"><classId hash="1976808671"><name><name>com/googlecode/jmxtrans/model/results/IdentityValueTransformer</name></name></classId></id><coverageId>5e3d4973e</coverageId></classHistory>
<classHistory><id hierarchicalHash="f3a4ca75"><classId hash="629774838"><name><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></name></classId></id><coverageId>9203c458</coverageId></classHistory>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>merge</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Server;)Lcom/googlecode/jmxtrans/model/Server;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>merge</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Server;)Lcom/googlecode/jmxtrans/model/Server;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>merge</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Server;)Lcom/googlecode/jmxtrans/model/Server;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>merge</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Server;)Lcom/googlecode/jmxtrans/model/Server;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>merge</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Server;)Lcom/googlecode/jmxtrans/model/Server;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.failParsingOnErrorIfRequested(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.failParsingOnErrorIfRequested(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.failParsingOnErrorIfRequested(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.failParsingOnErrorIfRequested(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.failParsingOnErrorIfRequested(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.continueParsingOnErrorIfRequested(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.failParsingOnErrorIfRequested(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>parseServers</name></method><methodDesc>(Ljava/lang/Iterable;Z)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(com.googlecode.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(com.googlecode.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(com.googlecode.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(com.googlecode.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(com.googlecode.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(com.googlecode.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.classloader.ClassLoadingTests.loadingNonExistingFileThrowsException(com.googlecode.jmxtrans.classloader.ClassLoadingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.canParseRunInterval(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>getOptions</name></method><methodDesc>()Lorg/apache/commons/cli/Options;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>185</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>209</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>248</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>317</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>350</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonDirectoryOrJsonFileIsRequired(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>334</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>329</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryCannotBeAFile(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>191</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>228</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>257</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>312</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>341</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonDirectoryOrJsonFileIsRequired(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>344</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>175</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>184</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>211</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>215</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>225</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>227</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>233</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.canParseRunInterval(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>234</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>254</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>256</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>309</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>311</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>324</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>340</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>343</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>191</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>228</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>257</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>312</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>341</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonDirectoryOrJsonFileIsRequired(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>344</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonDirectoryOrJsonFileIsRequired(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigDirectoryCannotBeAFile(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonConfigFileCannotBeADirectory(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileMustExist(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>178</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.runIntervalMustBeInteger(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>191</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.quartzConfigFileCannotBeADirectory(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>228</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>257</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>312</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>341</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>344</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>356</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsCanBeSetToTrueOrFalse(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>235</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.canParseRunInterval(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>325</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>330</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.noExceptionThrownWhenHelpIsAsked(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonDirectoryOrJsonFileIsRequired(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>getJsonDirOrFile</name></method><methodDesc>()Ljava/io/File;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>getRunPeriod</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.canParseRunInterval(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>isContinueOnJsonError</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.continueOnJsonErrorIsFalseByDefault(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>isHelp</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.cli.CliArgumentParserTest.jsonDirectoryOrJsonFileIsRequired(com.googlecode.jmxtrans.cli.CliArgumentParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/SocketAddress;)Ljava/net/DatagramSocket;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.DatagramSocketFactoryTest.testDatagramSocketFactoryMakeObject(com.googlecode.jmxtrans.connections.DatagramSocketFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/SocketAddress;)Ljava/net/DatagramSocket;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.DatagramSocketFactoryTest.testDatagramSocketFactoryMakeObject(com.googlecode.jmxtrans.connections.DatagramSocketFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/SocketAddress;)Ljava/net/DatagramSocket;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.DatagramSocketFactoryTest.testDatagramSocketFactoryMakeObject(com.googlecode.jmxtrans.connections.DatagramSocketFactoryTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljavax/management/remote/JMXServiceURL;Ljava/util/Map;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>asList</name></method><methodDesc>(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithArrayAsEnvironmentValueAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentArrayAsEnvironmentValueAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithArrayAsEnvironmentValueAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>convertArraysToLists</name></method><methodDesc>(Lcom/google/common/collect/ImmutableMap;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsAreNotEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentAreEquals(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentHaveSameHashCodes(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentHaveSameHashCodes(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentHaveSameHashCodes(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsHaveDifferentHashCodes(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentHaveSameHashCodes(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsSameUrlAndNoEnvironmentHaveSameHashCodes(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsHaveDifferentHashCodes(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.JmxConnectionParamsTests.connectionParamsWithDifferentEnvironmentsHaveDifferentHashCodes(com.googlecode.jmxtrans.connections.JmxConnectionParamsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Ljava/net/Socket;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Ljava/net/Socket;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Ljava/net/Socket;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Ljava/net/Socket;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Ljava/net/Socket;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;)Ljava/net/Socket;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.nullSocketIsInvalid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.closedSocketIsInvalid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.closedSocketIsInvalid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.nullSocketIsInvalid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.closedSocketIsInvalid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.nullSocketIsInvalid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.closedSocketIsInvalid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.connections.SocketFactoryTests.createdSocketIsValid(com.googlecode.jmxtrans.connections.SocketFactoryTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>processQuery</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>runOutputWritersForQuery</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>convertKeysToString</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>convertKeysToString</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>convertKeysToString</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>convertKeysToString</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>convertKeysToString</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>convertKeysToString</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>convertKeysToString</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>convertKeysToString</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>convertKeysToString</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>convertKeysToString</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>convertKeysToString</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>convertKeysToString</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>convertKeysToString</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>convertKeysToString</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getNewResultObject</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getNewResultObject</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getNewResultObject</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canCreateBasicResultData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getNewResultObject</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getNewResultObject</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getNewResultObject</name></method><methodDesc>(Ljava/lang/String;Ljava/util/Map;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>223</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>230</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>248</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>249</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>255</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>263</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleIntegerValue(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>269</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleIntegerValue(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>271</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleIntegerValue(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>277</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleIntegerValue(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>279</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleIntegerValue(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>285</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleIntegerValue(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleIntegerValue(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>225</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResults</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadTabularData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(com.googlecode.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>getName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(com.googlecode.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>getNumMultiThreadedServers</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(com.googlecode.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>getServers</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(com.googlecode.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>setServers</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveList</name></method><methodDesc>(Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveList</name></method><methodDesc>(Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveList</name></method><methodDesc>(Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testList(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveList</name></method><methodDesc>(Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testList(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveMap</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testResolveMap(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveMap</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testResolveMap(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveMap</name></method><methodDesc>(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testResolveMap(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveProps</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testResolveMap(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testResolveMap(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testResolveMap(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testResolveMap(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver</name></clazz><method><name>resolveString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testProps(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver$ObjectPropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testResolveMap(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver$ObjectPropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testResolveMap(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver$ObjectPropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testResolveMap(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver$ObjectPropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testMap(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver$ObjectPropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.PropertyResolverTests.testResolveMap(com.googlecode.jmxtrans.model.PropertyResolverTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver$ObjectPropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.cannotHaveNullValueInSettings(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver$PropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/PropertyResolver$PropertyResolverFunc</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/lang/String;ZZLjava/util/List;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>getAttr</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>getKeys</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>getObj</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>getOutputWriters</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>getResultAlias</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(com.googlecode.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>getTypeNames</name></method><methodDesc>()Lcom/google/common/collect/ImmutableSet;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>isAllowDottedKeys</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>isUseObjDomainAsKey</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>sizeOf</name></method><methodDesc>(Ljava/util/List;)I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>sizeOf</name></method><methodDesc>(Ljava/util/List;)I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>sizeOf</name></method><methodDesc>(Ljava/util/List;)I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>sizeOf</name></method><methodDesc>(Ljava/util/List;)I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>sizeOf</name></method><methodDesc>(Ljava/util/List;)I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addAttr</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addAttr</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addAttr</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addKey</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.testMerge(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addKey</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.testMerge(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addKey</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.testMerge(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addKey</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.testMerge(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addKeys</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addKeys</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addKeys</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addOutputWriter</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/OutputWriter;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addOutputWriter</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/OutputWriter;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addOutputWriter</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/OutputWriter;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addOutputWriter</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/OutputWriter;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addOutputWriters</name></method><methodDesc>([Lcom/googlecode/jmxtrans/model/OutputWriter;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addOutputWriters</name></method><methodDesc>([Lcom/googlecode/jmxtrans/model/OutputWriter;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>addOutputWriters</name></method><methodDesc>([Lcom/googlecode/jmxtrans/model/OutputWriter;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxProcessingTests.querySimpleAttribute(com.googlecode.jmxtrans.jmx.JmxProcessingTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/Query;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/Query;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>setAllowDottedKeys</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>setObj</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>setResultAlias</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.EqualsTests.testQuery2(com.googlecode.jmxtrans.EqualsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>setUseObjDomainAsKey</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>getAttributeName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadSingleIntegerValue(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>getClassName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canCreateBasicResultData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>getEpoch</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>getKeyAlias</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>getObjDomain</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>getTypeName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadCompositeData(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>getValues</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.jmx.JmxResultProcessorTest.canReadMapDataWithNonStringKeys(com.googlecode.jmxtrans.jmx.JmxResultProcessorTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Result</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;ZLjava/util/List;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;ZLjava/util/List;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;ZLjava/util/List;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;ZLjava/util/List;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;ZLjava/util/List;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;ZLjava/util/List;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>builder</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>builder</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>extractPortFromUrl</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getAlias</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getCronExpression</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getNumQueryThreads</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getPassword</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetHostAndPortFromUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getProtocolProviderPackages</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(com.googlecode.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getQueries</name></method><methodDesc>()Lcom/google/common/collect/ImmutableSet;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUsername</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testHashCode(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>isLocal</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.testMerge(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.testMerge(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.testMerge(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.testMerge(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.testMerge(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.testMerge(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.testMerge(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>addQueries</name></method><methodDesc>(Ljava/util/Set;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>addQueries</name></method><methodDesc>(Ljava/util/Set;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>addQuery</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.ConfigurationParserTest.sameServerWithTwoDifferentQueriesMergesQueries(com.googlecode.jmxtrans.ConfigurationParserTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>addQuery</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(com.googlecode.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/Server;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/Server;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>setAlias</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>setCronExpression</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>setHost</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>setNumQueryThreads</name></method><methodDesc>(Ljava/lang/Integer;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>setPassword</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>setUrl</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testGetUrl(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>setUsername</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.ServerTests.testEquals(com.googlecode.jmxtrans.model.ServerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>formatName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>populateContext</name></method><methodDesc>(Lorg/apache/commons/jexl2/JexlContext;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addAlias</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addMBeanIdentifier</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addRootPrefix</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addRootPrefix</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addRootPrefix</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addRootPrefix</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addRootPrefix</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>addTypeName</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/List;Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>computeKey</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValueMap</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Map;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValuesSeparator</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValuesSeparator</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValuesSeparator</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValuesSeparator</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValuesSeparator</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValuesSeparator</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValuesSeparator</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValuesSeparator</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getTypeNameValuesSeparator</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetConcatenatedTypeNameValues(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>splitTypeNameValue</name></method><methodDesc>(Ljava/lang/String;)[Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.KeyUtilsTests.testGetTypeNameValueMap(com.googlecode.jmxtrans.model.naming.KeyUtilsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStr(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStr(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStr(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStr(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/StringUtils</name></clazz><method><name>cleanupStr</name></method><methodDesc>(Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.naming.StringUtilsTest.testCleanupStrDottedKeysKept(com.googlecode.jmxtrans.model.naming.StringUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreNotTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreNotTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>doWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>doWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>doWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>doWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>doWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>firstNonNull</name></method><methodDesc>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>getSettings</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>getTypeNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>isDebugEnabled</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.cannotHaveNullValueInSettings(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.propertyResolvedIntSettings(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.allowDottedWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.useObjDomainWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter$ResultValuesTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Lcom/googlecode/jmxtrans/model/Result;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.BaseOutputWriterTests.booleanValuesAreTransformedToNumber(com.googlecode.jmxtrans.model.output.BaseOutputWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>convertToDouble</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>convertToDouble</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>convertToDouble</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>convertToDouble</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>convertToDouble</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>convertToDouble</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>convertToDouble</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>convertToDouble</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.stringCannotBeConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>convertToDouble</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.doubleIsConvertedToItself(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>convertToDouble</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>convertToDouble</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Double;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.stringCannotBeConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>getRegion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.testValidationWithoutSettings(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>getRegion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>getRegion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>getRegion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>getRegion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.testValidationWithoutSettings(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>getRegion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.testValidationWithoutSettings(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>getRegion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>getRegion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>getRegion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>getRegion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>getRegion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>41</int><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>parseRegion</name></method><methodDesc>(Ljava/io/BufferedReader;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.noRegionIsNotValid(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>parseRegion</name></method><methodDesc>(Ljava/io/BufferedReader;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.quotesAreIgnoredWhenParsingRegion(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>parseRegion</name></method><methodDesc>(Ljava/io/BufferedReader;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.quotesAreIgnoredWhenParsingRegion(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>parseRegion</name></method><methodDesc>(Ljava/io/BufferedReader;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.quotesAreIgnoredWhenParsingRegion(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>parseRegion</name></method><methodDesc>(Ljava/io/BufferedReader;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.quotesAreIgnoredWhenParsingRegion(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>parseRegion</name></method><methodDesc>(Ljava/io/BufferedReader;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.quotesAreIgnoredWhenParsingRegion(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>parseRegion</name></method><methodDesc>(Ljava/io/BufferedReader;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.quotesAreIgnoredWhenParsingRegion(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>parseRegion</name></method><methodDesc>(Ljava/io/BufferedReader;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.quotesAreIgnoredWhenParsingRegion(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>parseRegion</name></method><methodDesc>(Ljava/io/BufferedReader;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.quotesAreIgnoredWhenParsingRegion(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>parseRegion</name></method><methodDesc>(Ljava/io/BufferedReader;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.quotesAreIgnoredWhenParsingRegion(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>parseRegion</name></method><methodDesc>(Ljava/io/BufferedReader;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.quotesAreIgnoredWhenParsingRegion(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>parseRegion</name></method><methodDesc>(Ljava/io/BufferedReader;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.quotesAreIgnoredWhenParsingRegion(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>parseRegion</name></method><methodDesc>(Ljava/io/BufferedReader;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.noRegionIsNotValid(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>parseRegion</name></method><methodDesc>(Ljava/io/BufferedReader;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.regionIsParsed(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>parseRegion</name></method><methodDesc>(Ljava/io/BufferedReader;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.quotesAreIgnoredWhenParsingRegion(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.testValidationWithoutSettings(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.testValidationWithoutSettings(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.testValidationWithoutSettings(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.testValidationWithoutSettings(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/CloudWatchWriter;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/CloudWatchWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/CloudWatchWriter;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder</name></clazz><method><name>setNamespace</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.CloudWatchWriterTests.longIsConvertedToDouble(com.googlecode.jmxtrans.model.output.CloudWatchWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationWithoutSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>162</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getAddressingMode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getAddressingMode</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getDmax</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getGroupName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getPort</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSlope</name></method><methodDesc>()Linfo/ganglia/gmetric4j/gmetric/GMetricSlope;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getTmax</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getTtl</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getUnits</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>isV31</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GangliaWriter;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationWithoutSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GangliaWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GangliaWriter;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setAddressingMode</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setDmax</name></method><methodDesc>(Ljava/lang/Integer;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setGroupName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setHost</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationMinimalSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setSlope</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setTmax</name></method><methodDesc>(Ljava/lang/Integer;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setTtl</name></method><methodDesc>(Ljava/lang/Integer;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setUnits</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setV31</name></method><methodDesc>(Ljava/lang/Boolean;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GangliaWriterTests.testValidationAllSettings(com.googlecode.jmxtrans.model.output.GangliaWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.booleanAsNumberWorks(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>159</int><int>195</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>173</int><int>209</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.socketInvalidatedWhenError(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>219</int><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GraphiteWriter;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GraphiteWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.checkEmptyTypeNamesAreIgnored(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/GraphiteWriter;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setHost</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.portIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.writeSingleResult(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.GraphiteWriterTests.hostIsRequired(com.googlecode.jmxtrans.model.output.GraphiteWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>175</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>179</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>184</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>185</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>189</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>192</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>195</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>197</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.LibratoWriterTest.httpUserAgentContainsAppropriateInformation(com.googlecode.jmxtrans.model.output.LibratoWriterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NumberUtils</name></clazz><method><name>isNumeric</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.NumberUtilsTest.testIsNumeric(com.googlecode.jmxtrans.model.output.NumberUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testDontAddHostnameTag(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testPortNumberAsString(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNullHostTagname(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testTagSetting(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues3(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>formatResultString</name></method><methodDesc>(Ljava/lang/StringBuilder;Ljava/lang/String;JLjava/lang/Object;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testNonNumericValue(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMultipleValuesWithMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>sanitizeString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>sanitizeString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>sanitizeString</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testFinishOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>getAddHostnameTagDefault</name></method><methodDesc>()Z</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>getAddHostnameTagDefault</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendNoOpenTSDBResponse(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCreationIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>shutdownSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>shutdownSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSocketCloseIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>startOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testSuccessfulSendOpenTSDBResponse1(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>startOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testStartOutputIOException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setHost</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests.testUnknownHostException(com.googlecode.jmxtrans.model.output.OpenTSDBWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.unsetBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.unsetBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.wrongTypeBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.incorrectBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.incorrectBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.wrongTypeBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.unsetBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.incorrectBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getBooleanSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.wrongTypeBooleanSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.unsetIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.unsetIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.unsetIntSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.parsedFromStringIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.parsedFromStringIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.parsedFromStringIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.unsetIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.correctIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.parsedFromStringIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.parsedFromInvalidStringIntegerSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getStringSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.numberParsedAsStringSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getStringSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.numberParsedAsStringSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getStringSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.numberParsedAsStringSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getStringSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.numberParsedAsStringSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getStringSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.unsetStringSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getStringSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.SettingsTests.numberParsedAsStringSettings(com.googlecode.jmxtrans.model.output.SettingsTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>getAddHostnameTagDefault</name></method><methodDesc>()Z</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>getAddHostnameTagDefault</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>sendOutput</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.successfullySendMessageToTCollector(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.testSocketException(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setHost</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setPort</name></method><methodDesc>(I)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests.exceptionIsThrownWhenPortIsNotDefined(com.googlecode.jmxtrans.model.output.TCollectorUDPWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.falseIsConvertedToNumber(com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.falseIsConvertedToNumber(com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.falseIsConvertedToNumber(com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.trueIsConvertedToNumber(com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.falseIsConvertedToNumber(com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.trueIsConvertedToNumber(com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.falseIsConvertedToNumber(com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.integerIsNotModified(com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.falseIsConvertedToNumber(com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.trueIsConvertedToNumber(com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.falseIsConvertedToNumber(com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests.integerIsNotModified(com.googlecode.jmxtrans.model.results.BooleanAsNumberValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.negativeValueAbovePrecisionIsNotTransformed(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.valueBelowPrecisionIsTransformedToZero(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.negativeValueAbovePrecisionIsNotTransformed(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.nonNumberIsReturnedUnmodified(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.negativeValueAbovePrecisionIsNotTransformed(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.negativeValueAbovePrecisionIsNotTransformed(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.valueBelowPrecisionIsTransformedToZero(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.negativeValueAbovePrecisionIsNotTransformed(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.negativeValueAbovePrecisionIsNotTransformed(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.valueBelowPrecisionIsTransformedToZero(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.valueBelowPrecisionIsTransformedToZero(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.nullIsReturnedUnmodified(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.nonNumberIsReturnedUnmodified(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.negativeValueAbovePrecisionIsNotTransformed(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.valueBelowPrecisionIsTransformedToZero(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.valueBelowPrecisionIsTransformedToZero(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.negativeValueAbovePrecisionIsNotTransformed(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.nullIsReturnedUnmodified(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.nonNumberIsReturnedUnmodified(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.valueBelowPrecisionIsTransformedToZero(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/CPrecisionValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests.negativeValueAbovePrecisionIsNotTransformed(com.googlecode.jmxtrans.model.results.CPrecisionValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/IdentityValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.results.IdentityValueTransformerTests.identityTransformerDoesNothing(com.googlecode.jmxtrans.model.results.IdentityValueTransformerTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/JsonPrinter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(com.googlecode.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/JsonPrinter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(com.googlecode.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/JsonPrinter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/JsonPrinter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/PrintStream;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonPrinterTest.prettyJsonPrinting(com.googlecode.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/JsonPrinter</name></clazz><method><name>prettyPrint</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonPrinterTest.prettyJsonPrinting(com.googlecode.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/JsonPrinter</name></clazz><method><name>print</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonPrinterTest.standardJsonPrinting(com.googlecode.jmxtrans.util.JsonPrinterTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/JsonUtils</name></clazz><method><name>getJmxProcess</name></method><methodDesc>(Ljava/io/File;)Lcom/googlecode/jmxtrans/model/JmxProcess;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/JsonUtils</name></clazz><method><name>getJmxProcess</name></method><methodDesc>(Ljava/io/File;)Lcom/googlecode/jmxtrans/model/JmxProcess;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/JsonUtils</name></clazz><method><name>getJmxProcess</name></method><methodDesc>(Ljava/io/File;)Lcom/googlecode/jmxtrans/model/JmxProcess;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/JsonUtils</name></clazz><method><name>getJmxProcess</name></method><methodDesc>(Ljava/io/File;)Lcom/googlecode/jmxtrans/model/JmxProcess;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/JsonUtils</name></clazz><method><name>getJmxProcess</name></method><methodDesc>(Ljava/io/File;)Lcom/googlecode/jmxtrans/model/JmxProcess;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/JsonUtils</name></clazz><method><name>getJmxProcess</name></method><methodDesc>(Ljava/io/File;)Lcom/googlecode/jmxtrans/model/JmxProcess;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/JsonUtils</name></clazz><method><name>getJmxProcess</name></method><methodDesc>(Ljava/io/File;)Lcom/googlecode/jmxtrans/model/JmxProcess;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.JsonUtilsTest.loadingFromFile(com.googlecode.jmxtrans.util.JsonUtilsTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.watchingFileIsNotPossible(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/io/File;Lcom/googlecode/jmxtrans/util/WatchedCallback;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.modifiedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.modifiedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.deletedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.util.WatchDirTest.modifiedFileIsDetected(com.googlecode.jmxtrans.util.WatchDirTest)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>stopService</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>builder</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>checkErrorStream</name></method><methodDesc>(Ljava/lang/Process;)V</methodDesc></location><indexes><int>94</int><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>doGenerate</name></method><methodDesc>(Ljava/util/List;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>formatDouble</name></method><methodDesc>(D)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>formatDouble</name></method><methodDesc>(D)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>formatDouble</name></method><methodDesc>(D)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>formatDouble</name></method><methodDesc>(D)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>formatDouble</name></method><methodDesc>(D)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>formatDouble</name></method><methodDesc>(D)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>formatDouble</name></method><methodDesc>(D)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getBinaryPath</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getBinaryPath</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDataSourceName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDatabaseTemplateSpec</name></method><methodDesc>()Lorg/jrobin/core/RrdDef;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsDefStr</name></method><methodDesc>(Lorg/jrobin/core/DsDef;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getDsNames</name></method><methodDesc>([Lorg/jrobin/core/DsDef;)Ljava/util/List;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getOutputFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getOutputFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getRraStr</name></method><methodDesc>(Lorg/jrobin/core/ArcDef;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getTemplateFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>getTemplateFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>137</int><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>142</int><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>168</int><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>138</int><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>143</int><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolCreateDatabase</name></method><methodDesc>(Lorg/jrobin/core/RrdDef;)V</methodDesc></location><indexes><int>169</int><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter</name></clazz><method><name>rrdToolUpdate</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/quartz/Scheduler;Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/ConfigurationParser;Lcom/google/inject/Injector;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/quartz/Scheduler;Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/ConfigurationParser;Lcom/google/inject/Injector;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/quartz/Scheduler;Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/ConfigurationParser;Lcom/google/inject/Injector;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>deleteAllJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>doMain</name></method><methodDesc>()V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>executeStandalone</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>executeStandalone</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>executeStandalone</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>executeStandalone</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>executeStandalone</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileAdded</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileDeleted</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileDeleted</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileDeleted</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileDeleted</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>fileModified</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>getJsonFiles</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>isJsonFile</name></method><methodDesc>(Ljava/io/File;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processFilesIntoServers</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>processServersIntoJobs</name></method><methodDesc>()V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>scheduleJob</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>startupSystem</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>startupSystem</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>startupWatchdir</name></method><methodDesc>()V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopServices</name></method><methodDesc>()V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>stopWriterAndClearMasterServerList</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/google/common/collect/ImmutableSet;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/google/common/collect/ImmutableSet;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/google/common/collect/ImmutableSet;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/google/common/collect/ImmutableSet;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/google/common/collect/ImmutableSet;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/google/common/collect/ImmutableSet;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/google/common/collect/ImmutableSet;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>185</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>231</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>computeInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>171</int><int>228</int><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>189</int><int>246</int><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>119</int><int>184</int><int>241</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>175</int><int>232</int><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>171</int><int>228</int><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>189</int><int>246</int><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>171</int><int>228</int><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>189</int><int>246</int><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>237</int><int>115</int><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>250</int><int>128</int><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>255</int><int>198</int><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getApiKey</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getDetectInstance</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>347</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>267</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>312</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>313</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>297</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>347</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>185</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>192</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>206</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>210</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>237</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>241</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>243</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>277</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>284</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>285</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>286</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>287</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>296</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>311</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>351</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>297</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>297</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>347</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>347</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>352</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>357</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>271</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>278</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>288</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>304</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>314</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>318</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>331</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>335</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>339</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayMessage</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>343</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getGatewayUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getLocalInstanceId</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getProxyHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getProxyPort</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getSource</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>getTimeoutInMillis</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StackdriverWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>checkFile</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>getFilters</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>getNagiosHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>getOutputFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>getOutputFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>getPrefix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>getSuffix</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>getThresholds</name></method><methodDesc>()Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/apache/log4j/Logger;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>171</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>173</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>nagiosCheckValue</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter</name></clazz><method><name>valueCheck</name></method><methodDesc>(DLjava/lang/String;)Z</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>519</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>526</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>539</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>540</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>197</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>204</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>211</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>215</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>222</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>225</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>229</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>232</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>236</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>239</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>243</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>246</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>250</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>253</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>272</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>275</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>279</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>282</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>286</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>289</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>293</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>296</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>300</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>303</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>307</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>310</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>314</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>317</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>321</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>324</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>328</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>331</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>335</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>338</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>342</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>345</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>379</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>382</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>386</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>389</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>408</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>411</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>415</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>418</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>422</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>425</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>429</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>432</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>436</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>439</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>443</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>446</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>497</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>501</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>531</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>534</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>173</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>179</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>207</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>221</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>228</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>235</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>242</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>249</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>256</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>258</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>259</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>265</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>269</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>271</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>278</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>285</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>292</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>299</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>306</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>313</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>320</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>327</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>334</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>341</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>348</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>350</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>351</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>357</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>361</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>363</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>365</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>366</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>372</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>376</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>378</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>385</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>392</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>394</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>395</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>401</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>405</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>407</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>414</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>421</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>428</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>435</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>442</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>449</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>451</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>452</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>458</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>462</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>464</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>466</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>468</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>470</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>472</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>474</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>476</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>478</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>480</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>481</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>487</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>491</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>493</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>494</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>496</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>498</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>500</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>502</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>503</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>504</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>505</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>511</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>518</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>542</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>548</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>528</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>555</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>doSend</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>flush</name></method><methodDesc>()Z</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>getBucketType</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>getHostname</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>getHostname</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>getPort</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>getPort</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StatsDWriter</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/net/URL;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getLibratoApiTimeoutInMillis</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getProxyHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getProxyPort</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getSource</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getToken</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/net/URL;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>getUsername</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>204</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>258</int><int>171</int><int>317</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>293</int><int>234</int><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>157</int><int>244</int><int>303</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>238</int><int>297</int><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>253</int><int>312</int><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>322</int><int>263</int><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>258</int><int>171</int><int>317</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>293</int><int>234</int><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>258</int><int>171</int><int>317</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>293</int><int>234</int><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>308</int><int>249</int><int>162</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/LibratoWriter</name></clazz><method><name>writeToLibrato</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>327</int><int>268</int><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>128</int><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>124</int><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>97</int><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>175</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>210</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>215</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>124</int><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>124</int><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>execute</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/JmxProcess;)V</methodDesc></location><indexes><int>224</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>113</int><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>150</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>113</int><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>113</int><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>118</int><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>processServer</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxUtils</name></clazz><method><name>shutdownAndAwaitTermination</name></method><methodDesc>(Ljava/util/concurrent/ExecutorService;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>218</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>235</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>236</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>155</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>162</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>179</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>183</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>186</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>193</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>197</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>207</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>211</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>227</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>230</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>161</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>175</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>189</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>203</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>204</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>206</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>210</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>215</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>216</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>217</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>238</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>244</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>224</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Hibernate</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>251</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>231</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>232</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>156</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>184</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>191</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>195</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>202</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>205</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>223</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>226</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>173</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>210</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>211</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>234</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>240</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>220</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/ActiveMQ2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>247</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>202</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>219</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>220</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>142</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>173</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>184</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>211</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>214</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>156</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>157</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>194</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>222</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>228</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>208</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/InterestingInfo</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>235</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>format</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>86</int><int>42</int><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>output</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Object;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>computeAddressingMode</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Linfo/ganglia/gmetric4j/gmetric/GMetric$UDPAddressingMode;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getSpoofedHostName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>getType</name></method><methodDesc>(Ljava/lang/Object;)Linfo/ganglia/gmetric4j/gmetric/GMetricType;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getJmxServiceURL</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getJmxServiceURL</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getJmxServiceURL</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getLocalMBeanServer</name></method><methodDesc>()Ljavax/management/MBeanServer;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getLocalMBeanServer</name></method><methodDesc>()Ljavax/management/MBeanServer;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getPort</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getServerConnection</name></method><methodDesc>()Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>isQueriesMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>createOrOpenDatabase</name></method><methodDesc>()Lorg/jrobin/core/RrdDb;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>getOutputFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>getOutputFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>getTemplateFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>getTemplateFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>99</int><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>99</int><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>99</int><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>103</int><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLog4jAppender</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)Lorg/apache/log4j/Appender;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLog4jLoggerFactory</name></method><methodDesc>(Lorg/apache/log4j/Appender;)Lorg/apache/log4j/spi/LoggerFactory;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLog4jLoggerFactory</name></method><methodDesc>(Lorg/apache/log4j/Appender;)Lorg/apache/log4j/spi/LoggerFactory;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>getDelimiter</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>getMaxLogBackupFiles</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>getMaxLogBackupFiles</name></method><methodDesc>()Ljava/lang/Integer;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>getMaxLogFileSize</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>getOutputFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter</name></clazz><method><name>validateSetup</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>getHandler</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>serialize</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/io/OutputStream;)V</methodDesc></location><indexes><int>151</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>64</int><int>92</int><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>64</int><int>92</int><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>64</int><int>92</int><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/SensuWriter</name></clazz><method><name>writeToSensu</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;)V</methodDesc></location><indexes><int>68</int><int>96</int><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/CompositeData;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>171</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>173</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>191</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>getResult</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljavax/management/Attribute;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>106</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>108</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxResultProcessor</name></clazz><method><name>processTabularDataSupport</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList$Builder;Ljava/lang/String;Ljavax/management/openmbean/TabularDataSupport;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Tester</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>86</int><int>42</int><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>164</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>configure</name></method><methodDesc>()V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>getObjectPool</name></method><methodDesc>(Lorg/apache/commons/pool/KeyedPoolableObjectFactory;Ljava/lang/String;)Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>jmxTransConfiguration</name></method><methodDesc>()Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>68</int><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/JmxTransModule</name></clazz><method><name>scheduler</name></method><methodDesc>(Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;Lcom/googlecode/jmxtrans/guice/GuiceJobFactory;)Lorg/quartz/Scheduler;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ehcache</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildAppender</name></method><methodDesc>(Lch/qos/logback/core/encoder/Encoder;Lch/qos/logback/core/rolling/RollingPolicy;)Lch/qos/logback/core/rolling/RollingFileAppender;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildEncoder</name></method><methodDesc>()Lch/qos/logback/core/encoder/Encoder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildEncoder</name></method><methodDesc>()Lch/qos/logback/core/encoder/Encoder;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildEncoder</name></method><methodDesc>()Lch/qos/logback/core/encoder/Encoder;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildEncoder</name></method><methodDesc>()Lch/qos/logback/core/encoder/Encoder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildEncoder</name></method><methodDesc>()Lch/qos/logback/core/encoder/Encoder;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>buildEncoder</name></method><methodDesc>()Lch/qos/logback/core/encoder/Encoder;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getAndConfigureLogger</name></method><methodDesc>(Lch/qos/logback/core/Appender;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getAndConfigureLogger</name></method><methodDesc>(Lch/qos/logback/core/Appender;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getAndConfigureLogger</name></method><methodDesc>(Lch/qos/logback/core/Appender;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getAndConfigureLogger</name></method><methodDesc>(Lch/qos/logback/core/Appender;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getAndConfigureLogger</name></method><methodDesc>(Lch/qos/logback/core/Appender;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getAndConfigureLogger</name></method><methodDesc>(Lch/qos/logback/core/Appender;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getAndConfigureLogger</name></method><methodDesc>(Lch/qos/logback/core/Appender;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getSettingOutputPattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getSettingOutputPattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getSettingOutputPattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getSettingOutputPattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getSettingOutputPattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getSettingOutputPattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>getSettingOutputPattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initLogger</name></method><methodDesc>(Ljava/lang/String;)Lorg/slf4j/Logger;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TimeBasedRollingKeyOutWriter</name></clazz><method><name>initRollingPolicy</name></method><methodDesc>(Ljava/lang/String;ILjava/lang/String;)Lch/qos/logback/core/rolling/RollingPolicy;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Ganglia</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>102</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>130</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int><int>38</int><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>86</int><int>42</int><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker2</name></clazz><method><name>walkTree</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>getLogger</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Log4JWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="31" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="31" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="36" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="13" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testMergedTypeNameValues1(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="MEMORY_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testOneValueMatchingAttribute(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="31" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests.testInvalidJexlNaming(com.googlecode.jmxtrans.model.output.OpenTSDBGenericWriterTests)</value></killingTest></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/Integer;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="36" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/lang/StringBuilder;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="MEMORY_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>addTypeNamesTags</name></method><methodDesc>(Ljava/lang/StringBuilder;Lcom/googlecode/jmxtrans/model/Result;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="MEMORY_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>processOneMetric</name></method><methodDesc>(Ljava/util/List;Lcom/googlecode/jmxtrans/model/Result;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="23" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBGenericWriter</name></clazz><method><name>resultParser</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Result;)Ljava/util/List;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/apache/commons/pool/impl/GenericKeyedObjectPool;Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxActive</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxActive</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxWait</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMaxWait</name></method><methodDesc>()J</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMinIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getMinIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getNumActive</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getNumActive</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getNumIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getNumIdle</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>getPoolName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>setMaxActive</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>setMaxIdle</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>setMaxWait</name></method><methodDesc>(J)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>setMinIdle</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/monitoring/ManagedGenericKeyedObjectPool</name></clazz><method><name>setObjectName</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getConcatedTypeNameValues</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/KeyUtils</name></clazz><method><name>getKeyString</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Query;Lcom/googlecode/jmxtrans/model/Result;Ljava/util/Map$Entry;Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getJsonDirOrFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getJsonDirOrFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getJsonDirOrFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getObjectName</name></method><methodDesc>()Ljavax/management/ObjectName;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getQuartPropertiesFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getQuartPropertiesFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getRunPeriod</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>getRunPeriod</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>setJsonDirOrFile</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>setJsonDirOrFile</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>setObjectName</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>setQuartPropertiesFile</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>setRunPeriod</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>start</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ManagedJmxTransformerProcess</name></clazz><method><name>stop</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/Graphite</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>124</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/JmxQueryProcessor</name></clazz><method><name>fetchResults</name></method><methodDesc>(Ljavax/management/MBeanServerConnection;Lcom/googlecode/jmxtrans/model/Query;Ljavax/management/ObjectName;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/RRDToolWriter;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/RRDToolWriter;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/RRDToolWriter;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/RRDToolWriter;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/RRDToolWriter;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/output/RRDToolWriter;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>setBinaryPath</name></method><methodDesc>(Ljava/io/File;)Lcom/googlecode/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>setBooleanAsNumber</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>setGenerate</name></method><methodDesc>(Ljava/lang/Boolean;)Lcom/googlecode/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>setOutputFile</name></method><methodDesc>(Ljava/io/File;)Lcom/googlecode/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/RRDToolWriter$Builder</name></clazz><method><name>setTemplateFile</name></method><methodDesc>(Ljava/io/File;)Lcom/googlecode/jmxtrans/model/output/RRDToolWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>278</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>289</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>294</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>168</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>272</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>278</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>199</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>260</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>265</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>290</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>301</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>278</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>278</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>169</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>200</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/CliArgumentParser</name></clazz><method><name>parseOptions</name></method><methodDesc>([Ljava/lang/String;)Lcom/googlecode/jmxtrans/cli/JmxTransConfiguration;</methodDesc></location><indexes><int>302</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>getEnvironment</name></method><methodDesc>()Lcom/google/common/collect/ImmutableMap;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>getUrl</name></method><methodDesc>()Ljavax/management/remote/JMXServiceURL;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JMXConnectionParams</name></clazz><method><name>toString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>destroyObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/DatagramSocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/SocketAddress;Ljava/net/DatagramSocket;)Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/io/File;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/classloader/ClassLoaderEnricher</name></clazz><method><name>add</name></method><methodDesc>(Ljava/net/URL;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jobs/ServerJob</name></clazz><method><name>execute</name></method><methodDesc>(Lorg/quartz/JobExecutionContext;)V</methodDesc></location><indexes><int>65</int><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/util/Map;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/util/Map;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setAddHostnameTag</name></method><methodDesc>(Ljava/lang/Boolean;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setBooleanAsNumber</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setMergeTypeNamesTags</name></method><methodDesc>(Ljava/lang/Boolean;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setMetricNamingExpression</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder</name></clazz><method><name>setTagName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/OpenTSDBWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTag</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/util/Map;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTags</name></method><methodDesc>(Ljava/util/Map;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setAddHostnameTag</name></method><methodDesc>(Ljava/lang/Boolean;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setBooleanAsNumber</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setMergeTypeNamesTags</name></method><methodDesc>(Ljava/lang/Boolean;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setMetricNamingExpression</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder</name></clazz><method><name>setTagName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/TCollectorUDPWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/HeapMemory</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/MemoryPool</name></clazz><method><name>main</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>finishOutput</name></method><methodDesc>()V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/OpenTSDBWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Lcom/googlecode/jmxtrans/util/SignalInterceptor;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Lcom/googlecode/jmxtrans/util/SignalInterceptor;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorHelper</name></clazz><method><name>handle</name></method><methodDesc>(Lsun/misc/Signal;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>destroyObject</name></method><methodDesc>(Lcom/googlecode/jmxtrans/connections/JMXConnectionParams;Ljavax/management/remote/JMXConnector;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Lcom/googlecode/jmxtrans/connections/JMXConnectionParams;)Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Lcom/googlecode/jmxtrans/connections/JMXConnectionParams;)Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Lcom/googlecode/jmxtrans/connections/JMXConnectionParams;)Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>makeObject</name></method><methodDesc>(Lcom/googlecode/jmxtrans/connections/JMXConnectionParams;)Ljavax/management/remote/JMXConnector;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Lcom/googlecode/jmxtrans/connections/JMXConnectionParams;Ljavax/management/remote/JMXConnector;)Z</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Lcom/googlecode/jmxtrans/connections/JMXConnectionParams;Ljavax/management/remote/JMXConnector;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Lcom/googlecode/jmxtrans/connections/JMXConnectionParams;Ljavax/management/remote/JMXConnector;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Lcom/googlecode/jmxtrans/connections/JMXConnectionParams;Ljavax/management/remote/JMXConnector;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Lcom/googlecode/jmxtrans/connections/JMXConnectionParams;Ljavax/management/remote/JMXConnector;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/JmxConnectionFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Lcom/googlecode/jmxtrans/connections/JMXConnectionParams;Ljavax/management/remote/JMXConnector;)Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/JmxProcess</name></clazz><method><name>isServersMultiThreaded</name></method><methodDesc>()Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/VelocityWriter</name></clazz><method><name>getVelocityEngine</name></method><methodDesc>(Ljava/util/List;)Lorg/apache/velocity/app/VelocityEngine;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/Map;)V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>buildLoggerName</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/DailyKeyOutWriter</name></clazz><method><name>getDatePattern</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>destroyObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/connections/SocketFactory</name></clazz><method><name>validateObject</name></method><methodDesc>(Ljava/net/InetSocketAddress;Ljava/net/Socket;)Z</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>sizeOf</name></method><methodDesc>(Ljava/util/List;)I</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query</name></clazz><method><name>sizeOf</name></method><methodDesc>(Ljava/util/List;)I</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/TCollectorUDPWriter</name></clazz><method><name>prepareSender</name></method><methodDesc>()V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></clazz><method><name>register</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></clazz><method><name>register</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></clazz><method><name>registerQuietly</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></clazz><method><name>registerQuietly</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></clazz><method><name>registerQuietly</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></clazz><method><name>registerQuietly</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor</name></clazz><method><name>registerQuietly</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder</name></clazz><method><name>setBooleanAsNumber</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/CloudWatchWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>addTypeNames</name></method><methodDesc>(Ljava/util/List;)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setBooleanAsNumber</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GangliaWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/GangliaWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StdOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StdOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StdOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StdOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StdOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StdOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/StdOutWriter</name></clazz><method><name>internalWrite</name></method><methodDesc>(Lcom/googlecode/jmxtrans/model/Server;Lcom/googlecode/jmxtrans/model/Query;Lcom/google/common/collect/ImmutableList;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;I)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/Settings</name></clazz><method><name>getIntegerSetting</name></method><methodDesc>(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>addTypeName</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setBooleanAsNumber</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setDebugEnabled</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter$Builder</name></clazz><method><name>setRootPrefix</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/output/GraphiteWriter$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lcom/google/common/collect/ImmutableList;ZLjava/lang/Boolean;Ljava/util/Map;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/BaseOutputWriter</name></clazz><method><name>setSettings</name></method><methodDesc>(Ljava/util/Map;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>addQueries</name></method><methodDesc>([Lcom/googlecode/jmxtrans/model/Query;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>addQueries</name></method><methodDesc>([Lcom/googlecode/jmxtrans/model/Query;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>addQueries</name></method><methodDesc>([Lcom/googlecode/jmxtrans/model/Query;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>setLocal</name></method><methodDesc>(Z)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Server$Builder</name></clazz><method><name>setProtocolProviderPackages</name></method><methodDesc>(Ljava/lang/String;)Lcom/googlecode/jmxtrans/model/Server$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/SignalInterceptor$SignalInterceptorException</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/Throwable;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>getHost</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>getPort</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/GraphiteWriter</name></clazz><method><name>getPort</name></method><methodDesc>()I</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/GuiceJobFactory</name></clazz><method><name>newJob</name></method><methodDesc>(Lorg/quartz/spi/TriggerFiredBundle;)Lorg/quartz/Job;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/GuiceJobFactory</name></clazz><method><name>newJob</name></method><methodDesc>(Lorg/quartz/spi/TriggerFiredBundle;)Lorg/quartz/Job;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/GuiceJobFactory</name></clazz><method><name>newJob</name></method><methodDesc>(Lorg/quartz/spi/TriggerFiredBundle;)Lorg/quartz/Job;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/guice/GuiceJobFactory</name></clazz><method><name>newJob</name></method><methodDesc>(Lorg/quartz/spi/TriggerFiredBundle;)Lorg/quartz/Job;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/ProcessQueryThread</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/ProcessQueryThread</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/ProcessQueryThread</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/JexlNamingStrategy</name></clazz><method><name>setExpression</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/LocalJMXConnector</name></clazz><method><name>getConnectionId</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/LocalJMXConnector</name></clazz><method><name>getMBeanServerConnection</name></method><methodDesc>()Ljavax/management/MBeanServerConnection;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/LocalJMXConnector</name></clazz><method><name>getMBeanServerConnection</name></method><methodDesc>(Ljavax/security/auth/Subject;)Ljavax/management/MBeanServerConnection;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>getAdditionalJars</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>getQuartPropertiesFile</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/cli/JmxTransConfiguration</name></clazz><method><name>isRunEndlessly</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/ProcessServerThread</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/jmx/ProcessServerThread</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>setTypeNames</name></method><methodDesc>(Ljava/util/Set;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/Query$Builder</name></clazz><method><name>setTypeNames</name></method><methodDesc>(Ljava/util/Set;)Lcom/googlecode/jmxtrans/model/Query$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3$ResultCapture</name></clazz><method><name>getSettings</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>3</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/example/TreeWalker3$ResultCapture</name></clazz><method><name>getSettings</name></method><methodDesc>()Ljava/util/Map;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/ValidationException</name></clazz><method><name>getQuery</name></method><methodDesc>()Lcom/googlecode/jmxtrans/model/Query;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/JmxTransformer$ShutdownHook</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/results/BooleanAsNumberValueTransformer</name></clazz><method><name>apply</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/NagiosWriter$1</name></clazz><method><name>makeNewLoggerInstance</name></method><methodDesc>(Ljava/lang/String;)Lorg/apache/log4j/Logger;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/util/WatchDir</name></clazz><method><name>run</name></method><methodDesc>()V</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/ConfigurationParser</name></clazz><method><name>mergeServerLists</name></method><methodDesc>(Ljava/util/List;Ljava/util/List;)Lcom/google/common/collect/ImmutableList;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/naming/ClassAttributeNamingStrategy</name></clazz><method><name>getDelimiter</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>com/googlecode/jmxtrans/model/output/KeyOutWriter$1</name></clazz><method><name>makeNewLoggerInstance</name></method><methodDesc>(Ljava/lang/String;)Lorg/apache/log4j/Logger;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
